# Python stubs generated by omniidl from bell.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "Sino"
#
__name__ = "Sino"
_0_Sino = omniORB.openModule("Sino", r"bell.idl")
_0_Sino__POA = omniORB.openModule("Sino__POA", r"bell.idl")


# interface Bell
_0_Sino._d_Bell = (omniORB.tcInternal.tv_objref, "IDL:Sino/Bell:1.0", "Bell")
omniORB.typeMapping["IDL:Sino/Bell:1.0"] = _0_Sino._d_Bell
_0_Sino.Bell = omniORB.newEmptyClass()
class Bell :
    _NP_RepositoryId = _0_Sino._d_Bell[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_Sino.Bell = Bell
_0_Sino._tc_Bell = omniORB.tcInternal.createTypeCode(_0_Sino._d_Bell)
omniORB.registerType(Bell._NP_RepositoryId, _0_Sino._d_Bell, _0_Sino._tc_Bell)

# Bell operations and attributes
Bell._d_ring_bell = ((), (), None)

# Bell object reference
class _objref_Bell (CORBA.Object):
    _NP_RepositoryId = Bell._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def ring_bell(self, *args):
        return self._obj.invoke("ring_bell", _0_Sino.Bell._d_ring_bell, args)

omniORB.registerObjref(Bell._NP_RepositoryId, _objref_Bell)
_0_Sino._objref_Bell = _objref_Bell
del Bell, _objref_Bell

# Bell skeleton
__name__ = "Sino__POA"
class Bell (PortableServer.Servant):
    _NP_RepositoryId = _0_Sino.Bell._NP_RepositoryId


    _omni_op_d = {"ring_bell": _0_Sino.Bell._d_ring_bell}

Bell._omni_skeleton = Bell
_0_Sino__POA.Bell = Bell
omniORB.registerSkeleton(Bell._NP_RepositoryId, Bell)
del Bell
__name__ = "Sino"

#
# End of module "Sino"
#
__name__ = "bell_idl"

_exported_modules = ( "Sino", )

# The end.
